@name Ballistic's Loco Plow Detail E2 (EMD)(Release V 1.0.10)
#Because people are lazy
@inputs Decouple Bogey:entity [D1 D2]:vector
@outputs 
@persist Decouple CB OvSc C
@trigger 
#------ General Config

Color = vec(255) #Color of plow
Color2 = vec(255) #Color of coupler cut bar grabs
Color3 = vec(30) #Color of ditch lights (if you have them)
Material = "models/proppertextures/enamel_black" #Material of plow
Material2 = "models/proppertextures/acrylic" #Material of coupler cut bar 
Material3 = "models/proppertextures/acrylic" #Material of ditch lights (if you have them)
OverallScale=1  #overall scale of the plow. Can be changed for customs/narrowgauge.

#------ Plow Config

PlowType = 0 #0 = Strike Plate, 1 = Foot Board, 2 = Plow 3 = No
MuDoors = 0 #0 = Closed, 1 = Open, 2 = None
StreamlinedDoors = 0 #0 = None, 1 = Closed, 2 = Open

#------ Cutbar/Ditchlight Config

CutBar = 0# The Type of Cut Bar You Want to Have.  Range of 0 through 3.
Ditchlights = 0 #0 = No Ditchlights, 1 = Ditchlights
DitchlightType = 0 #0 = Squared Ditchlights 1 = Round Ditchlights 2 = Round Small Ditchlights
DitchlightX = 0 #Ditchlight Pos X
DitchlightY = 0 #Ditchlgith Pos Y
DitchlightZ = 0  #Ditchlight Pos Z

#------ Coupler Config

Coupler = 0 #0 = No Coupler, 1 = Fake Real Coupler
CouplerMat = "models/proppertextures/wheel"  #Material used for the coupler.
CouplerScale=1  #scale of the coupler. Can be changed for narrowgauge coupling systems.

#------ Hose Config

Hose = 3 #The Ammount of hoses ya want
MuHose = 0 #0 = Yes I want MU's 1 = Nah fam no MU for you 
Kinky = 0 #0 = none kinky 1 = maxamum kink

#------ Ungodly Large MU Config

MuPlug = 0 #0 = no. 1 = I'll take one please 2 = Another One 3 = and they don't stop coming 4 and up = they stopped coming
MuType = 0 #0 = regular mu plugs 1 = MU Cable (use the MU1 stuff)
MuX = 0 #Mu 1/2 Plug Pos X
MuY = 0 #Mu 1/2 Plug h Pos Y
MuZ = 0  #Mu 1/2 Plug  Pos Z
MuX3 = 0 #Mu 3 Plug  Pos X
MuY3 = 0 #Mu 3 Plug Pos Y
MuZ3 = 0  #Mu 3 Plug Pos Z
MuPlugColor1 = vec(255)
MuPlugColor2 = vec(255)
MuPlugColor3 = vec(255)

#[
Credits:
Ballistic Studios (Creator/Owner)
Big E (E2 Codeneer/Co-Owner thing/Maker of moving bits (please send all questions to him thanks))
Calensk Kerman (Beta Tester)
Red Stone (Beta Tester)
Laz (Hoses)
Anyone999991 (Cut Bar)
Grove (Plow, Foot Boards, Ditchlights)
]#
#[
To do list:
Make E2 more flexiable and more customisable
]#
#[ 

DO NOT MESS WITH ANYTHING BEYOND THIS POINT

                                                                                       Too bad, The Big E takes orders from nobody!

FINE, You can mess with it too E


]#
#please help I want to kill myself
if(duped() | dupefinished()){ reset() }
if(first()){
if(PlowType <= 1) {MuDoors = 0}
else{MuDoors = MuDoors}
if(MuDoors == 0) {B = 2}
if(MuDoors == 1) {B = 1}
if(MuDoors == 2) {B = 1}
if(MuHose == 1) {B = 3}
if(Ditchlights == 1) {D = 255}
else{D = 0}
Mat = Material
Mat2 = Material2
Mat3 = Material3
C = 1
if(PlowType == 0) {E = 255}
else{E = 0}
if(PlowType == 1) {F = 255}
else{F = 0}
if(PlowType == 2) {G = 255}
else{G = 0}
if(Coupler == 1) {H = 255}
else{H = 0}
                                    #Cutbar code moved to the bottom
if(Hose == 3) {I = 3}
if(Hose == 4) {I = 4}
if(Hose > 4) {I = 0}
if(Hose < 3) {I = 0}
DT = DitchlightType
MUPC1 = MuPlugColor1
MUPC2 = MuPlugColor2
MUPC3 = MuPlugColor3
OvSc = OverallScale
CpSc = CouplerScale
#this looks like the yandare dev code with all the if commands god help me
A = 0
if(F==0) {}
if(F==255){
A++
holoCreate(A)
holoParent(A, entity())
holoAng(A, entity():toWorld(ang(-90,0,0)) )
holoModel(A, "models/gsgtrainprops/parts/footboards/pilot_emd_mid.mdl")
holoEntity(A):setSubMaterial(1,Mat)
holoPos(A,entity():toWorld(vec(50*OvSc,0*OvSc,7*OvSc)))
holoScale(A, vec(1*OvSc,1.2*OvSc,1*OvSc))
holoColor(A,Color)
}
if(E==0){}
if(E==255)
{
A++
holoCreate(A)
holoParent(A, entity())
holoAng(A, entity():toWorld(ang(0,90,0)) )
holoModel(A, "models/sprops/rectangles/size_2/rect_12x72x3.mdl")
holoMaterial(A,Mat)
holoPos(A,entity():toWorld(vec(49*OvSc,0*OvSc,-1*OvSc)))
holoScale(A, vec(1*OvSc,1.2*OvSc,1*OvSc))
holoColor(A,Color)
}

A++
holoCreate(A)
holoParent(A, entity())
holoAng(A, entity():toWorld(ang(0,90,90)) )
holoModel(A, "models/sprops/geometry/qhex_24.mdl")
holoMaterial(A,Mat)
holoPos(A,entity():toWorld(vec(49*OvSc,41.98*OvSc,-1*OvSc)))
holoScale(A, vec(1*OvSc,1*OvSc,1.386*OvSc))
holoColor(A,Color)

A++
holoCreate(A)
holoParent(A, entity())
holoAng(A, entity():toWorld(ang(0,-90,-90)) )
holoModel(A, "models/sprops/geometry/qhex_24.mdl")
holoMaterial(A,Mat)
holoPos(A,entity():toWorld(vec(49*OvSc,-41.98*OvSc,-1*OvSc)))
holoScale(A, vec(1*OvSc,1*OvSc,1.386*OvSc))
holoColor(A,Color)
}
if(G==0){}
if(G==255){
A++
holoCreate(A)
holoParent(A, entity())
holoAng(A, entity():toWorld(ang(-90,0,0)) )
holoModel(A, "models/gsgtrainprops/trains/propper/snowplows/plow_medium_multipurpose.mdl")
holoMaterial(A,Mat)
holoPos(A,entity():toWorld(vec(57*OvSc,0*OvSc,1*OvSc)))
holoScale(A, vec(1.0*OvSc))
holoColor(A,Color)
holoBodygroup(A,1,MuDoors)
holoBodygroup(A,2,StreamlinedDoors)
}
if(H==0){}
if(H==255){
A=100
holoCreate(A)
holoParent(A, entity())
holoAng(A, entity():toWorld(ang(-90,0,0)) )
holoModel(A, "models/gsgtrainprops/parts/couplers/type_e_coupler.mdl")
holoMaterial(A,CouplerMat)
holoPos(A,entity():toWorld(vec(30*OvSc,0.1*OvSc,13.5*OvSc)))
holoScale(A, vec(1*OvSc))
holoColor(A,vec(255) )
}
A++
holoCreate(A)
holoParent(A, entity())
holoAng(A, entity():toWorld(ang(-90,0,0)) )
holoModel(A, "models/lazpack/detail/mu_"+ I +"hose_right.mdl")
holoPos(A,entity():toWorld(vec(17*OvSc,-32*OvSc,2*OvSc)))
holoScale(A, vec(1*OvSc))
holoColor(A,vec(255) )
holoBodygroup(A,1,B)
A++
holoCreate(A)
holoParent(A, entity())
holoAng(A, entity():toWorld(ang(-90,0,0)) )
holoModel(A, "models/lazpack/detail/mu_"+ I +"hose_left.mdl")
holoPos(A,entity():toWorld(vec(17*OvSc,32*OvSc,2*OvSc)))
holoScale(A, vec(1*OvSc))
holoColor(A,vec(255) )
holoBodygroup(A,1,B)
if(Kinky == 0){A++ 
A++
holoCreate(A)
holoParent(A, entity())
holoAng(A, entity():toWorld(ang(-90,0,0)) )
holoModel(A, "models/lazpack/detail/brakehose.mdl")
holoPos(A,entity():toWorld(vec(25*OvSc,15*OvSc,2*OvSc)))
holoScale(A, vec(1*OvSc))
holoColor(A,vec(255) )
holoEntity(A):setSubMaterial(1,Mat) 
}
if(Kinky == 1){A++ 
A++
holoCreate(A)
holoParent(A, entity())
holoAng(A, entity():toWorld(ang(-90,0,0)) )
holoModel(A, "models/lazpack/detail/brakehose_offset.mdl")
holoPos(A,entity():toWorld(vec(25*OvSc,15*OvSc,2*OvSc)))
holoScale(A, vec(1*OvSc))
holoColor(A,vec(255) )
holoEntity(A):setSubMaterial(1,Mat) 
}    
A=200 
holoCreate(A)
holoPos(A,entity():toWorld(vec((10+C)*OvSc,0*OvSc,0*OvSc)))
holoParent(A, entity())
holoModel(A, "models/anytrains/props/detail/cutbar.mdl")
holoAng(A, entity():toWorld(ang(90,180,0)) )
holoMaterial(A, (""))
holoColor(A,Color2)
holoParent(2,1)
holoEntity(A):setSubMaterial(5,Mat2) 
holoScale(A,vec(1*OvSc))
holoBodygroup(A,2,CB)
A=300 
holoCreate(A)
holoPos(A,entity():toWorld(vec((19+C)*OvSc,0,14*OvSc)))
holoParent(A, entity())
holoModel(A, "models/parts/flumz/coupler_pin.mdl")
holoAng(A, entity():toWorld(ang(90,180,0)) )
holoMaterial(A, "")
holoColor(A,Color)
holoParent(2,1)
holoScale(A,vec(1*OvSc))
holoEntity(A):setSubMaterial(2,CouplerMat) 
if(D==0){}
if(D==255){
A++ 
holoCreate(A)
holoPos(A,entity():toWorld(vec((-9+DitchlightZ)*OvSc,(-23-DitchlightX)*OvSc,(10-DitchlightY)*OvSc)))
holoParent(A, entity())
holoModel(A, "models/sprops/rectangles/size_2/rect_12x12x3.mdl")
holoAng(A, entity():toWorld(ang(0,90,0)) )
holoScale(A, vec(1*OvSc))
holoMaterial(A, (Mat3))
holoColor(A,Color3)
holoParent(2,1)

A++ 
holoCreate(A)
holoPos(A,entity():toWorld(vec((-9+DitchlightZ)*OvSc,(23+DitchlightX)*OvSc,(10-DitchlightY)*OvSc)))
holoParent(A, entity())
holoModel(A, "models/sprops/rectangles/size_2/rect_12x12x3.mdl")
holoAng(A, entity():toWorld(ang(0,90,0)) )
holoScale(A, vec(1*OvSc))
holoMaterial(A, (Mat3))
holoColor(A,Color3)
holoParent(2,1)

if(DT == 0){A++ 
holoCreate(A)
holoPos(A,entity():toWorld(vec((-10+DitchlightZ)*OvSc,(23+DitchlightX)*OvSc,(11-DitchlightY)*OvSc)))
holoParent(A, entity())
holoModel(A, "models/gsgtrainprops/parts/headlights/headlight_singlebeam_plate.mdl")
holoAng(A, entity():toWorld(ang(0,0,0)) )
holoScale(A, vec(1*OvSc))
holoEntity(A):setSubMaterial(1,Mat3)
holoColor(A,Color3)
holoParent(2,1)

A++ 
holoCreate(A)
holoPos(A,entity():toWorld(vec((-10+DitchlightZ)*OvSc,(-23-DitchlightX)*OvSc,(11-DitchlightY)*OvSc)))
holoParent(A, entity())
holoModel(A, "models/gsgtrainprops/parts/headlights/headlight_singlebeam_plate.mdl")
holoAng(A, entity():toWorld(ang(0,0,0)) )
holoScale(A, vec(1*OvSc))
holoEntity(A):setSubMaterial(1,Mat3)
holoColor(A,Color3)
holoParent(2,1)

}
if(DT == 1){A++ 
holoCreate(A)
holoPos(A,entity():toWorld(vec((-10+DitchlightZ)*OvSc,(23+DitchlightX)*OvSc,(11-DitchlightY)*OvSc)))
holoParent(A, entity())
holoModel(A, "models/gsgtrainprops/parts/headlights/headlight_singlebeam_large.mdl")
holoAng(A, entity():toWorld(ang(0,0,0)) )
holoScale(A, vec(1*OvSc))
holoEntity(A):setSubMaterial(1,Mat3)
holoColor(A,Color3)
holoParent(2,1)
A++ 
holoCreate(A)
holoPos(A,entity():toWorld(vec(-10+DitchlightZ,-23-DitchlightX,11-DitchlightY)*OvSc))
holoParent(A, entity())
holoModel(A, "models/gsgtrainprops/parts/headlights/headlight_singlebeam_large.mdl")
holoAng(A, entity():toWorld(ang(0,0,0)) )
holoScale(A, vec(1*OvSc))
holoEntity(A):setSubMaterial(1,Mat3)
holoColor(A,Color3)
holoParent(2,1)

}
if(DT == 2){A++ 
holoCreate(A)
holoPos(A,entity():toWorld(vec(-10+DitchlightZ,23+DitchlightX,11-DitchlightY)*OvSc))
holoParent(A, entity())
holoModel(A, "models/gsgtrainprops/parts/headlights/headlight_singlebeam_mars_sb-2000.mdl")
holoAng(A, entity():toWorld(ang(0,0,0)) )
holoScale(A, vec(1*OvSc))
holoEntity(A):setSubMaterial(1,Mat3)
holoColor(A,Color3)
holoParent(2,1)

A++ 
holoCreate(A)
holoPos(A,entity():toWorld(vec(-10+DitchlightZ,-23-DitchlightX,11-DitchlightY)*OvSc))
holoParent(A, entity())
holoModel(A, "models/gsgtrainprops/parts/headlights/headlight_singlebeam_mars_sb-2000.mdl")
holoAng(A, entity():toWorld(ang(0,0,0)) )
holoScale(A, vec(1*OvSc))
holoEntity(A):setSubMaterial(1,Mat3)
holoColor(A,Color3)
holoParent(2,1)
}
}
if(MuType==0) {
if(MuPlug >= 1){A++ 
holoCreate(A)
holoPos(A,entity():toWorld(vec((0+MuZ)*OvSc,(0+MuX)*OvSc,(-MuY)*OvSc)))
holoParent(A, entity())
holoModel(A, "models/titus's_propper_model_pack_2.4/propper/mu_plugs/mu_socket_27pin.mdl")
holoAng(A, entity():toWorld(ang(0,-90,90)) )
holoScale(A, vec(1*OvSc))
holoEntity(A):setSubMaterial(1,Mat3)
holoColor(A,MUPC1)
holoParent(2,1)

}
if(MuPlug >= 2){A++ 
A++ 
holoCreate(A)
holoPos(A,entity():toWorld(vec((0+MuZ)*OvSc,(0-MuX)*OvSc,(-MuY)*OvSc)))
holoParent(A, entity())
holoModel(A, "models/titus's_propper_model_pack_2.4/propper/mu_plugs/mu_socket_27pin.mdl")
holoAng(A, entity():toWorld(ang(0,-90,90)) )
holoScale(A, vec(1*OvSc))
holoEntity(A):setSubMaterial(1,Mat3)
holoColor(A,MUPC2)
holoParent(2,1)
}
if(MuPlug >= 3){A++ 
A++ 
holoCreate(A)
holoPos(A,entity():toWorld(vec((0+MuZ3)*OvSc,(0-MuX3)*OvSc,(-MuY3)*OvSc)))
holoParent(A, entity())
holoModel(A, "models/titus's_propper_model_pack_2.4/propper/mu_plugs/mu_socket_27pin.mdl")
holoAng(A, entity():toWorld(ang(0,-90,90)) )
holoScale(A, vec(1*OvSc))
holoEntity(A):setSubMaterial(1,Mat3)
holoColor(A,MUPC3)
holoParent(2,1)
}
}
if(MuType==1)
{
A++    
holoCreate(A)
holoPos(A,entity():toWorld(vec((0+MuZ)*OvSc,0,(-MuY)*OvSc)))
holoParent(A, entity())
holoModel(A, "models/anytrains/props/detail/mu_cable.mdl")
holoAng(A, entity():toWorld(ang(-90,0,0)) )
holoScale(A, vec(1*OvSc))
holoEntity(A):setSubMaterial(1,Mat3)
holoColor(A,MUPC1)
holoParent(2,1)
A++    
holoCreate(A)
holoPos(A,entity():toWorld(vec((7+MuZ)*OvSc,0,(-MuY+16.5)*OvSc)))
holoParent(A, entity())
holoModel(A, "models/sprops/cylinders/size_2/cylinder_3x3.mdl")
holoAng(A, entity():toWorld(ang(0,0,90)) )
holoScale(A, vec(1*OvSc))
holoEntity(A):setSubMaterial(1,"icegt/loco/ice_trainmetal_darkgrey")
holoColor(A,MUPC2)
holoParent(2,1)
A++    
holoCreate(A)
holoPos(A,entity():toWorld(vec((7+MuZ)*OvSc,0,(-MuY+16.5)*OvSc)))
holoParent(A, entity())
holoModel(A, "models/sprops/cylinders/size_1/cylinder_1_5x36.mdl")
holoAng(A, entity():toWorld(ang(55,0,0)) )
holoScale(A, vec(1*OvSc))
holoEntity(A):setSubMaterial(1,"icegt/loco/ice_trainmetal_darkgrey")
holoColor(A,MUPC2)
holoParent(2,1)
holoClipEnabled(A,1,1)     
holoClip(A,1,vec(-85,0,0),vec(0,0,-1),0)

}

#Code for moving parts                                                                                                                                                                                                                                                                                                                   #The Big E was here lmao
CB = (CutBar*2)+1-Decouple
holoBodygroup(200,2,CB)
holoBodygroup(100,1,Decouple)
holoPos(300,entity():toWorld(vec((19+C-(Decouple*4.5))*OvSc,0,14.2*OvSc)))
if(Decouple>0){Bogey:constraintBreak("rope")}
#holoBodygroup(300,1,Decouple)
#Code for ditch lights 
if(D==0){}
if(D==255){
A++
spriteSpawn(A,"sprites/light_glow02")
spriteSetPos(A,entity():toWorld(vec(-10+DitchlightZ,23+DitchlightX,11-DitchlightY)*OvSc))
spriteSetAlpha(A,255)
spriteSetColor(A,D2)
spriteSetParent(A,entity())
A++
spriteSpawn(A,"sprites/light_glow02")
spriteSetPos(A,entity():toWorld(vec(-10+DitchlightZ,-23-DitchlightX,11-DitchlightY)*OvSc))
spriteSetAlpha(A,255)
spriteSetColor(A,D1)
spriteSetParent(A,entity())
}
