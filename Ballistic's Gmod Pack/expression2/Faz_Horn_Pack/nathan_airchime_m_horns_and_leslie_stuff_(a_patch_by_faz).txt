@name Nathan AirChime M horns and Leslie stuff (a patch by Faz)
@inputs R PitchIn [SoundOnIn SoundOffIn]:string 
@outputs 
@persist STH
@trigger 
#[
So here we are again...
Yeah, this is a hold over till we get new leslie models and M horns in general.
Works the same way as it did last time, but now stuff is a lot lower on ents (thanks e2m).
Yada yada, only the M horns can have interior paint and manifold colors, yada yada.

Also, horn covers are gone, so suck it up.
]#

#Special thanks to Griggs from Discord who allowed me to access the code that give the horn it's new echo effect!
#Version [REDACTED]
#=====================================================================#
    #Start Config
Type=2 #1 for M3, 2 for M5, 3 for leslie s3l, 4 for s5t (leave 0 if you want no horn)

Color=vec(255) #color here for the horn
Color1=vec(255) #color here for inside the horn
ColorM=vec(255) #color here for the manifold (M HORN ONLY!)
ColorS=vec(17) #color here for the stand
#these are the body groups
B1=0 #bell 1 and so on (only use this for leslie models)
B2=0
B3=0
B4=0
B5=0
DR=0 #this is the way the horn will face when spawned, 0 is for forward, 1 is backward (helps with funky horn styles)
ST=0 #do you want your horn to sit on a stand? (1: boxy 2: circle?)
STH=4.5 #height of the stand (anywhere between 0 and 12, but why would you need 12?  Default is 4.5)
HornPos = vec(0,0,0) #position of the horn in relation to the e2.  Useful for if you want the horn to move dependent on a certain road num. DO NOT CHANGE HEIGHT VECTOR!
#submaterials/materials
#S1 = the outer horn.  S2 = the inside of the horn.  SB = the base.  SBp = the horn hose thingy.  CV = covers SM = manifold for the M horns
S1="models/proppertextures/acrylic_metal1"
S2="models/proppertextures/acrylic_metal1_grimey"
SM="models/proppertextures/acrylic_metal1"
SB="models/proppertextures/acrylic"
SBp="models/proppertextures/enamel_black"

#Sound configs!
SoundOn = "scotttrains/horns/nathan_m5_dual_simpson_loop.wav" #The sound of the horn/looping horn
SoundOff = "scotttrains/horns/nathan_m5_dual_simpson_end.wav" #End of said sound above.
Pitch = 100 #Pitch of the sound played.  100 is about there you'd want to stay, unless you'd want a 'interesting' horn.
Volume = 1 #Volume.  Keep between 1 and 0, as going past either will make you a bad boy.
Level = 100 #horn sound level, in decibles. 100 is the default.

    #End Config
#=====================================================================#

if(first()| dupefinished()){
entity():setAlpha(0)

 A=10   
if(DR==0){
    Ang=0
    F=1
}else{
    Ang=180
    F=-1
}

if(ST==0){
    STH=ST
}elseif(ST==3){
    STH=45
}else{STH=STH}

holoCreate(8)
holoParent(8,entity())
holoPos(8,holoEntity(8):toWorld(HornPos+vec(0,0,STH)))
holoAng(8,entity():toWorld(ang(0,Ang,0)))
holoAlpha(8,0)
holoScale(8,vec(0))

if(ST==1){

A++
holoCreate(A)
holoParent(A,entity())
holoModel(A, "models/sprops/rectangles_thin/size_1_5/rect_6x6x1_5.mdl")
holoMaterial(A, SB)
holoColor(A,ColorS)
holoScale(A, vec(1.5,1,0.6))
holoAng(A,entity():toWorld(ang(0,0,0)))
holoPos(A,holoEntity(8):toWorld(vec(0,0,-0.5)))
A++
holoCreate(A)
holoParent(A,entity())
holoModel(A, "models/sprops/rectangles_thin/size_1_5/rect_6x12x1_5.mdl")
holoMaterial(A, SB)
holoColor(A,ColorS)
holoScale(A, vec(1,1,0.6))
holoAng(A,entity():toWorld(ang(90,0,0)))
holoPos(A,holoEntity(8):toWorld(vec(4.05,0,-6.2))) 
holoClipEnabled(A,1,1) 
holoClip(A,1,vec(STH-6,0,0),vec(-1,0,0),0)
A++
holoCreate(A)
holoParent(A,entity())
holoModel(A, "models/sprops/rectangles_thin/size_1_5/rect_6x12x1_5.mdl")
holoMaterial(A, SB)
holoColor(A,ColorS)
holoScale(A, vec(1,1,0.6))
holoAng(A,entity():toWorld(ang(90,0,0)))
holoPos(A,holoEntity(8):toWorld(vec(-4.05,0,-6.2)))
holoClipEnabled(A,1,1) 
holoClip(A,1,vec(STH-6,0,0),vec(-1,0,0),0)

A++
holoCreate(A)
holoParent(A,entity())
holoModel(A, "models/sprops/cylinders/size_1/cylinder_1_5x12.mdl")
holoMaterial(A, SBp)
holoColor(A,ColorS)
holoScale(A, vec(1,1,1))
holoAng(A,entity():toWorld(ang(0,0,0)))
holoPos(A,holoEntity(8):toWorld(vec(0,0,-6.2))) 
holoClipEnabled(A,1,1) 
holoClip(A,1,vec(0,0,-STH+6),vec(0,0,1),0)
}elseif(ST==2){

A++
holoCreate(A)
holoParent(A,entity())
holoModel(A, "models/sprops/cylinders/size_3/cylinder_6x12.mdl")
holoMaterial(A, SB)
holoColor(A,ColorS)
holoScale(A, vec(1,1,1))
holoAng(A,entity():toWorld(ang(0,0,0)))
holoPos(A,holoEntity(8):toWorld(vec(0,0,-6.2))) 
holoClipEnabled(A,1,1) 
holoClip(A,1,vec(0,0,-STH+6),vec(0,0,1),0)
}elseif(ST==3){

A++
holoCreate(A)
holoParent(A,entity())
holoModel(A, "cube")
holoMaterial(A, SB)
holoColor(A,ColorS)
holoScale(A, vec(1,1,0.1))
holoAng(A,entity():toWorld(ang(0,0,0)))
holoPos(A,holoEntity(8):toWorld(vec(0,0,-0.9))) 
A++
holoCreate(A)
holoParent(A,entity())
holoModel(A, "models/sprops/cylinders/size_3/cylinder_6x42.mdl")
holoMaterial(A, SB)
holoColor(A,ColorS)
holoScale(A, vec(0.4,0.4,1))
holoAng(A,entity():toWorld(ang(0,0,0)))
holoPos(A,holoEntity(8):toWorld(vec(0,0,-22))) 
A++
holoCreate(A)
holoParent(A,entity())
holoModel(A, "cube")
holoMaterial(A, SB)
holoColor(A,ColorS)
holoScale(A, vec(0.6,0.6,0.8))
holoAng(A,entity():toWorld(ang(0,0,0)))
holoPos(A,holoEntity(8):toWorld(vec(0,0,-41))) 
A++
holoCreate(A)
holoParent(A,entity())
holoModel(A, "cube")
holoMaterial(A, SB)
holoColor(A,ColorS)
holoScale(A, vec(0.2,2.5,0.4))
holoAng(A,entity():toWorld(ang(0,0,0)))
holoPos(A,holoEntity(8):toWorld(vec(0,0,-43))) 
A++
holoCreate(A)
holoParent(A,entity())
holoModel(A, "cube")
holoMaterial(A, SB)
holoColor(A,ColorS)
holoScale(A, vec(2.5,0.2,0.4))
holoAng(A,entity():toWorld(ang(0,0,0)))
holoPos(A,holoEntity(8):toWorld(vec(0,0,-43))) 
}
if(Type==0){
}elseif(Type==1){

P2M0=p2mCreate(holoEntity(8):pos(), holoEntity(8):angles())
P2M0:p2mSetParent(holoEntity(8))
P2M0:p2mSetMaterial(SM)
P2M0:p2mSetColor(ColorM)
P2M0:p2mPushModel("models/sprops/geometry/t_fdisc_12.mdl", vec(0,0,0),ang(0,0,90),vec(0.35, 0.4, 0.35))
P2M0:p2mPushModel("models/sprops/cylinders/size_2/cylinder_3x12.mdl", vec(0,0,2.4),ang(0,0,0),vec(0.5, 0.5, 0.4))
P2M0:p2mPushModel("models/sprops/cylinders/size_2/cylinder_3x12.mdl", vec(0,0,2),ang(90,0,0),vec(0.5,0.5,0.3))
P2M0:p2mPushModel("models/sprops/cylinders/size_2/cylinder_3x12.mdl", vec(0,0,2),ang(90,0,0),vec(0.25,0.25,0.35))
P2M0:p2mPushModel("models/sprops/rectangles/size_1_5/rect_6x12x3.mdl", vec(0,0,2.2),ang(0,0,90),vec(0.3,0.86,0.2))
P2M0:p2mPushModel("models/sprops/rectangles/size_1/rect_3x12x3.mdl", vec(0,0,2.4),ang(90,0,0),vec(0.4,0.6,0.1))
P2M0:p2mPushModel("models/sprops/rectangles/size_1/rect_3x12x3.mdl", vec(1.74,0,2.4),ang(90,0,0),vec(0.4,0.6,0.1))
P2M0:p2mPushModel("models/sprops/rectangles/size_1/rect_3x12x3.mdl", vec(-1.74,0,2.4),ang(90,0,0),vec(0.4,0.6,0.1))
P2M0:p2mPushModel("models/sprops/rectangles/size_1/rect_3x30x3.mdl", vec(0,0,4.2),ang(0,0,0),vec(0.6,0.6,0.05))
P2M0:p2mPushModel("models/sprops/rectangles/size_1/rect_3x30x3.mdl", vec(0,0,6.5),ang(0,0,0),vec(0.6,0.6,0.05))
P2M0:p2mPushModel("models/sprops/rectangles/size_1/rect_3x30x3.mdl", vec(0,0,((5.5+5.3)/2)),ang(0,0,0),vec(0.6,0.4,0.75))
P2M0:p2mPushModel("models/sprops/rectangles/size_1/rect_3x30x3.mdl", vec(0,0,((5.5+5.3)/2)),ang(0,0,0),vec(0.5,0.5,0.3))
P2M0:p2mPushModel("models/sprops/cylinders/size_2/cylinder_3x3.mdl", vec(-7,0,5.5),ang(0,0,90),vec(1.45,1.45,0.6))
P2M0:p2mPushModel("models/sprops/cylinders/size_2/cylinder_3x3.mdl", vec(0,0,5.5),ang(0,0,90),vec(1.45,1.45,0.6))
P2M0:p2mPushModel("models/sprops/cylinders/size_2/cylinder_3x3.mdl", vec(7,0,5.2),ang(0,0,90),vec(1.3,1.3,0.6))
P2M0:p2mPushModel("models/sprops/cylinders/size_1/cylinder_1_5x3.mdl", vec(-7,0,7.7),ang(0,0,90),vec(0.65,0.65,0.6))
P2M0:p2mPushModel("models/sprops/cylinders/size_1/cylinder_1_5x3.mdl", vec(0,0,7.7),ang(0,0,90),vec(0.65,0.65,0.6))
P2M0:p2mPushModel("models/sprops/cylinders/size_1/cylinder_1_5x3.mdl", vec(7,0,7),ang(0,0,90),vec(0.65,0.65,0.6))
P2M0:p2mBuild()
#bells
P2M1=p2mCreate(holoEntity(8):pos(), holoEntity(8):angles())
P2M1:p2mSetParent(holoEntity(8))
P2M1:p2mSetMaterial(S1)
P2M1:p2mSetColor(Color)
    #bell 1
P2M1:p2mPushModel("models/sprops/geometry/fdisc_12.mdl", vec(0,-2.2+(4.4*B1),5.5),ang(0,180*B1,0),vec(0.5,0.35,0.5))
P2M1:p2mPushModel("models/sprops/geometry/fring_48.mdl", vec(0,-2.7+(5.4*B1),5.5),ang(0,180*B1,0),vec(0.125,0.25,0.125))
P2M1:p2mPushModel("models/sprops/geometry/fring_42.mdl", vec(0,-2.7+(5.4*B1),5.5),ang(0,180*B1,0),vec(0.125,0.25,0.125))
P2M1:p2mPushModel("models/gsgtrainprops/parts/headlights/pyle_plate_single.mdl", vec(0,-2.8+(5.6*B1),5.5),ang(randint(0,180),0,180-(180*B1)),vec(0.075,0.075,0.25))
P2M1:p2mPushModel("models/sprops/misc/fittings/cred_12_9_short.mdl", vec(0,-1.2+(2.4*B1),5.5),ang(0,180*B1,-90),vec(0.5,0.5,0.16))
P2M1:p2mPushModel("models/exoticpack/a200.mdl", vec(0,-0.5+(1.0*B1),5.5-3.32),ang(0,90+(180*B1),0),vec(0.82,1,1),0,array(vec(1.4,0,0),vec(1,0,0)))
    #bell 2
P2M1:p2mPushModel("models/sprops/geometry/fdisc_12.mdl", vec(-7,-2.2+(4.4*B2),5.5),ang(0,180*B2,0),vec(0.48,0.35,0.48))
P2M1:p2mPushModel("models/sprops/geometry/fring_48.mdl", vec(-7,-2.7+(5.4*B2),5.5),ang(0,180*B2,0),vec(0.12,0.25,0.12))
P2M1:p2mPushModel("models/sprops/geometry/fring_42.mdl", vec(-7,-2.7+(5.4*B2),5.5),ang(0,180*B2,0),vec(0.125,0.25,0.125))
P2M1:p2mPushModel("models/gsgtrainprops/parts/headlights/pyle_plate_single.mdl", vec(-7,-2.8+(5.6*B2),5.5),ang(randint(0,180),0,180-(180*B2)),vec(0.075,0.075,0.25))
P2M1:p2mPushModel("models/sprops/misc/fittings/cred_12_9_short.mdl", vec(-7,-1.2+(2.4*B2),5.5),ang(0,180*B2,-90),vec(0.48,0.48,0.16))
P2M1:p2mPushModel("models/exoticpack/a200.mdl", vec(-7,-0.5+(1.0*B2),5.5-3.12),ang(0,90+(180*B2),0),vec(0.68,0.92,0.92),0,array(vec(1.4,0,0),vec(1,0,0)))
    #bell 4
P2M1:p2mPushModel("models/sprops/geometry/fdisc_12.mdl", vec(7,-2.2+(4.4*B4),5.2),ang(0,180*B4,0),vec(0.43,0.35,0.43))
P2M1:p2mPushModel("models/sprops/geometry/fring_48.mdl", vec(7,-2.7+(5.4*B4),5.2),ang(0,180*B4,0),vec(0.1,0.25,0.1))
P2M1:p2mPushModel("models/sprops/geometry/fring_42.mdl", vec(7,-2.7+(5.4*B4),5.2),ang(0,180*B4,0),vec(0.125,0.25,0.125))
P2M1:p2mPushModel("models/gsgtrainprops/parts/headlights/pyle_plate_single.mdl", vec(7,-2.8+(5.6*B4),5.2),ang(randint(0,180),0,180-(180*B4)),vec(0.075,0.075,0.25))
P2M1:p2mPushModel("models/sprops/misc/fittings/cred_12_9_short.mdl", vec(7,-1.2+(2.4*B4),5.2),ang(0,180*B4,-90),vec(0.43,0.43,0.16))
P2M1:p2mPushModel("models/exoticpack/a200.mdl", vec(7,-0.5+(1.0*B4),5.2-2.85),ang(0,90+(180*B4),0),vec(0.42,0.85,0.85),0,array(vec(1.4,0,0),vec(1,0,0)))
P2M1:p2mBuild()
#bell throats
P2M2=p2mCreate(holoEntity(8):pos(), holoEntity(8):angles())
P2M2:p2mSetParent(holoEntity(8))
P2M2:p2mSetMaterial(S2)
P2M2:p2mSetColor(Color1)
P2M2:p2mPushModel("models/exoticpack/a200.mdl", vec(0,-0.25+(0.5*B1),5.5-3.26),ang(0,90+(180*B1),0),vec(0.82,1,1)*0.98,0,array(vec(1.7,0,0),vec(1,0,0)))
P2M2:p2mPushModel("models/exoticpack/a200.mdl", vec(-7,-0.27+(0.54*B2),5.5-3.06),ang(0,90+(180*B2),0),vec(0.68,0.92,0.92)*0.98,0,array(vec(1.7,0,0),vec(1,0,0)))
P2M2:p2mPushModel("models/exoticpack/a200.mdl", vec(7,-0.37+(0.74*B4),5.2-2.81),ang(0,90+(180*B4),0),vec(0.42,0.85,0.85)*0.98,0,array(vec(1.7,0,0),vec(1,0,0)))
P2M2:p2mBuild()
#diaphragms?
P2M3=p2mCreate(holoEntity(8):pos(), holoEntity(8):angles())
P2M3:p2mSetParent(holoEntity(8))
P2M3:p2mSetMaterial("models/proppertextures/toolsblack")
P2M3:p2mSetColor(vec(255))
P2M3:p2mPushModel("models/sprops/cylinders/size_1/cylinder_1_5x3.mdl", vec(0,2-(4*B1),5.52),ang(0,180*B1,90),vec(1.8,1.8,0.25))
P2M3:p2mPushModel("models/sprops/cylinders/size_1/cylinder_1_5x3.mdl", vec(-7,2-(4*B2),5.52),ang(0,180*B2,90),vec(1.72,1.72,0.25))
P2M3:p2mPushModel("models/sprops/cylinders/size_1/cylinder_1_5x3.mdl", vec(7,2-(4*B4),5.22),ang(0,180*B4,90),vec(1.65,1.65,0.25))
P2M3:p2mBuild()

}elseif(Type==2){

P2M0=p2mCreate(holoEntity(8):pos(), holoEntity(8):angles())
P2M0:p2mSetParent(holoEntity(8))
P2M0:p2mSetMaterial(SM)
P2M0:p2mSetColor(ColorM)
P2M0:p2mPushModel("models/sprops/geometry/t_fdisc_12.mdl", vec(0,0,0),ang(0,0,90),vec(0.35, 0.4, 0.35))
P2M0:p2mPushModel("models/sprops/cylinders/size_2/cylinder_3x12.mdl", vec(0,0,1.6),ang(0,0,0),vec(0.5,0.5,0.3))
P2M0:p2mPushModel("models/sprops/cylinders/size_2/cylinder_3x12.mdl", vec(0,0,1.2),ang(90,0,0),vec(0.38,0.38,0.4))
P2M0:p2mPushModel("models/sprops/cylinders/size_2/cylinder_3x12.mdl", vec(2.25,0,1.2),ang(90,0,0),vec(0.5,0.5,0.1))
P2M0:p2mPushModel("models/sprops/cylinders/size_2/cylinder_3x12.mdl", vec(-2.25,0,1.2),ang(90,0,0),vec(0.5,0.5,0.1))
P2M0:p2mPushModel("models/sprops/rectangles/size_1_5/rect_6x12x3.mdl", vec(0,0,0.4),ang(0,0,90),vec(0.34,0.2,0.2))
P2M0:p2mPushModel("models/sprops/rectangles/size_1_5/rect_6x12x3.mdl", vec(0,0,2),ang(0,0,90),vec(0.47,0.2,0.2))
P2M0:p2mPushModel("models/sprops/cylinders/size_2/cylinder_3x30.mdl", vec(0,0,2.6),ang(90,0,0),vec(0.42,0.42,0.6))
P2M0:p2mPushModel("models/sprops/rectangles/size_1/rect_3x12x3.mdl", vec(0,0.6,1.4),ang(90,0,0),vec(0.2,0.2,0.2))
P2M0:p2mPushModel("models/sprops/rectangles/size_1/rect_3x12x3.mdl", vec(0,-0.6,1.4),ang(90,0,0),vec(0.2,0.2,0.2))
P2M0:p2mPushModel("models/sprops/rectangles/size_1/rect_3x30x3.mdl", vec(0,0,2.6),ang(0,0,0),vec(0.44,0.6,0.15))
P2M0:p2mPushModel("models/sprops/cylinders/size_2/cylinder_3x3.mdl", vec(7,0,4.32),ang(0,0,90),vec(1.45,1.45,0.6))
P2M0:p2mPushModel("models/sprops/cylinders/size_2/cylinder_3x3.mdl", vec(-7,0,4.32),ang(0,0,90),vec(1.45,1.45,0.6))
P2M0:p2mPushModel("models/sprops/cylinders/size_2/cylinder_3x3.mdl", vec(0,0,5),ang(0,0,90),vec(1.45,1.45,0.6))
P2M0:p2mPushModel("models/sprops/cylinders/size_2/cylinder_3x3.mdl", vec(3.9,0,9),ang(0,0,90),vec(1.3,1.3,0.6))
P2M0:p2mPushModel("models/sprops/cylinders/size_2/cylinder_3x3.mdl", vec(-3.9,0,9),ang(0,0,90),vec(1.3,1.3,0.6))
P2M0:p2mPushModel("models/sprops/rectangles/size_1/rect_3x12x3.mdl", vec(6.2,0,7.9),ang(62,0,0),vec(0.3,0.45,0.1))
P2M0:p2mPushModel("models/sprops/rectangles/size_1/rect_3x12x3.mdl", vec(-6.2,0,7.9),ang(-62,0,0),vec(0.3,0.45,0.1))
P2M0:p2mPushModel("models/sprops/rectangles/size_1/rect_3x12x3.mdl", vec(1.5,0,8),ang(-62,0,0),vec(0.3,0.45,0.1))
P2M0:p2mPushModel("models/sprops/rectangles/size_1/rect_3x12x3.mdl", vec(-1.5,0,8),ang(62,0,0),vec(0.3,0.45,0.1))
P2M0:p2mPushModel("models/sprops/cylinders/size_1/cylinder_1_5x3.mdl", vec(-5.7,0,9),ang(0,0,90),vec(0.65,0.65,0.6))
P2M0:p2mPushModel("models/sprops/cylinders/size_1/cylinder_1_5x3.mdl", vec(5.7,0,9),ang(0,0,90),vec(0.65,0.65,0.6))
P2M0:p2mPushModel("models/sprops/triangles/right/size_0_5/rtri_6x12.mdl", vec(7,0,6),ang(-90,180,0),vec(0.65,0.15,0.65))
P2M0:p2mPushModel("models/sprops/triangles/right/size_0_5/rtri_6x12.mdl", vec(-7,0,6),ang(-90,0,0),vec(0.65,0.15,0.65))
P2M0:p2mPushModel("models/sprops/rectangles/size_1_5/rect_6x6x3.mdl", vec(-3.8,0,7.5),ang(0,0,90),vec(0.45,0.23,0.15))
P2M0:p2mPushModel("models/sprops/rectangles/size_1_5/rect_6x6x3.mdl", vec(3.8,0,7.5),ang(0,0,90),vec(0.45,0.23,0.15))
P2M0:p2mPushModel("models/sprops/cylinders/size_2/cylinder_3x18.mdl", vec(2.4,0,6.7),ang(0,0,0),vec(0.38,0.38,0.45))
P2M0:p2mPushModel("models/sprops/cylinders/size_2/cylinder_3x18.mdl", vec(-2.4,0,6.7),ang(0,0,0),vec(0.38,0.38,0.45))
P2M0:p2mBuild()
#bells
P2M1=p2mCreate(holoEntity(8):pos(), holoEntity(8):angles())
P2M1:p2mSetParent(holoEntity(8))
P2M1:p2mSetMaterial(S1)
P2M1:p2mSetColor(Color)
    #bell 1
P2M1:p2mPushModel("models/sprops/geometry/fdisc_12.mdl", vec(0,-2.2+(4.4*B1),5),ang(0,180*B1,0),vec(0.5,0.35,0.5))
P2M1:p2mPushModel("models/sprops/geometry/fring_48.mdl", vec(0,-2.7+(5.4*B1),5),ang(0,180*B1,0),vec(0.125,0.25,0.125))
P2M1:p2mPushModel("models/sprops/geometry/fring_42.mdl", vec(0,-2.7+(5.4*B1),5),ang(0,180*B1,0),vec(0.125,0.25,0.125))
P2M1:p2mPushModel("models/gsgtrainprops/parts/headlights/pyle_plate_single.mdl", vec(0,-2.8+(5.6*B1),5),ang(randint(0,180),0,180-(180*B1)),vec(0.075,0.075,0.25))
P2M1:p2mPushModel("models/sprops/misc/fittings/cred_12_9_short.mdl", vec(0,-1.2+(2.4*B1),5),ang(0,180*B1,-90),vec(0.5,0.5,0.16))
P2M1:p2mPushModel("models/exoticpack/a200.mdl", vec(0,-0.5+(1.0*B1),5-3.32),ang(0,90+(180*B1),0),vec(0.82,1,1),0,array(vec(1.4,0,0),vec(1,0,0)))
    #bell 2
P2M1:p2mPushModel("models/sprops/geometry/fdisc_12.mdl", vec(-7,-2.2+(4.4*B2),4.32),ang(0,180*B2,0),vec(0.48,0.35,0.48))
P2M1:p2mPushModel("models/sprops/geometry/fring_48.mdl", vec(-7,-2.7+(5.4*B2),4.32),ang(0,180*B2,0),vec(0.12,0.25,0.12))
P2M1:p2mPushModel("models/sprops/geometry/fring_42.mdl", vec(-7,-2.7+(5.4*B2),4.32),ang(0,180*B2,0),vec(0.125,0.25,0.125))
P2M1:p2mPushModel("models/gsgtrainprops/parts/headlights/pyle_plate_single.mdl", vec(-7,-2.8+(5.6*B2),4.32),ang(randint(0,180),0,180-(180*B2)),vec(0.075,0.075,0.25))
P2M1:p2mPushModel("models/sprops/misc/fittings/cred_12_9_short.mdl", vec(-7,-1.2+(2.4*B2),4.32),ang(0,180*B2,-90),vec(0.48,0.48,0.16))
P2M1:p2mPushModel("models/exoticpack/a200.mdl", vec(-7,-0.5+(1.0*B2),4.32-3.12),ang(0,90+(180*B2),0),vec(0.68,0.92,0.92),0,array(vec(1.4,0,0),vec(1,0,0)))
    #bell 3
P2M1:p2mPushModel("models/sprops/geometry/fdisc_12.mdl", vec(7,-2.2+(4.4*B3),4.32),ang(0,180*B3,0),vec(0.45,0.35,0.45))
P2M1:p2mPushModel("models/sprops/geometry/fring_48.mdl", vec(7,-2.7+(5.4*B3),4.32),ang(0,180*B3,0),vec(0.113,0.25,0.113))
P2M1:p2mPushModel("models/sprops/geometry/fring_42.mdl", vec(7,-2.7+(5.4*B3),4.32),ang(0,180*B3,0),vec(0.125,0.25,0.125))
P2M1:p2mPushModel("models/gsgtrainprops/parts/headlights/pyle_plate_single.mdl", vec(7,-2.8+(5.6*B3),4.32),ang(randint(0,180),0,180-(180*B3)),vec(0.075,0.075,0.25))
P2M1:p2mPushModel("models/sprops/misc/fittings/cred_12_9_short.mdl", vec(7,-1.2+(2.4*B3),4.32),ang(0,180*B3,-90),vec(0.45,0.45,0.16))
P2M1:p2mPushModel("models/exoticpack/a200.mdl", vec(7,-0.5+(1.0*B3),4.32-3),ang(0,90+(180*B3),0),vec(0.55,0.89,0.89),0,array(vec(1.4,0,0),vec(1,0,0)))
    #bell 4
P2M1:p2mPushModel("models/sprops/geometry/fdisc_12.mdl", vec(3.9,-2.2+(4.4*B4),9),ang(0,180*B4,0),vec(0.43,0.35,0.43))
P2M1:p2mPushModel("models/sprops/geometry/fring_48.mdl", vec(3.9,-2.7+(5.4*B4),9),ang(0,180*B4,0),vec(0.1,0.25,0.1))
P2M1:p2mPushModel("models/sprops/geometry/fring_42.mdl", vec(3.9,-2.7+(5.4*B4),9),ang(0,180*B4,0),vec(0.125,0.25,0.125))
P2M1:p2mPushModel("models/gsgtrainprops/parts/headlights/pyle_plate_single.mdl", vec(3.9,-2.8+(5.6*B4),9),ang(randint(0,180),0,180-(180*B4)),vec(0.075,0.075,0.25))
P2M1:p2mPushModel("models/sprops/misc/fittings/cred_12_9_short.mdl", vec(3.9,-1.2+(2.4*B4),9),ang(0,180*B4,-90),vec(0.43,0.43,0.16))
P2M1:p2mPushModel("models/exoticpack/a200.mdl", vec(3.9,-0.5+(1.0*B4),9-2.85),ang(0,90+(180*B4),0),vec(0.42,0.85,0.85),0,array(vec(1.4,0,0),vec(1,0,0)))
    #bell 5
P2M1:p2mPushModel("models/sprops/geometry/fdisc_12.mdl", vec(-3.9,-2.2+(4.4*B5),9),ang(0,180*B5,0),vec(0.43,0.35,0.43))
P2M1:p2mPushModel("models/sprops/geometry/fring_48.mdl", vec(-3.9,-2.7+(5.4*B5),9),ang(0,180*B5,0),vec(0.1,0.25,0.1))
P2M1:p2mPushModel("models/sprops/geometry/fring_42.mdl", vec(-3.9,-2.7+(5.4*B5),9),ang(0,180*B5,0),vec(0.125,0.25,0.125))
P2M1:p2mPushModel("models/gsgtrainprops/parts/headlights/pyle_plate_single.mdl", vec(-3.9,-2.8+(5.6*B5),9),ang(randint(0,180),0,180-(180*B5)),vec(0.075,0.075,0.25))
P2M1:p2mPushModel("models/sprops/misc/fittings/cred_12_9_short.mdl", vec(-3.9,-1.2+(2.4*B5),9),ang(0,180*B5,-90),vec(0.43,0.43,0.16))
P2M1:p2mPushModel("models/exoticpack/a200.mdl", vec(-3.9,-0.5+(1.0*B5),9-2.75),ang(0,90+(180*B5),0),vec(0.33,0.82,0.82),0,array(vec(1.4,0,0),vec(1,0,0)))
P2M1:p2mBuild()
#bell throats
P2M2=p2mCreate(holoEntity(8):pos(), holoEntity(8):angles())
P2M2:p2mSetParent(holoEntity(8))
P2M2:p2mSetMaterial(S2)
P2M2:p2mSetColor(Color1)
P2M2:p2mPushModel("models/exoticpack/a200.mdl", vec(0,-0.25+(0.5*B1),5-3.26),ang(0,90+(180*B1),0),vec(0.82,1,1)*0.98,0,array(vec(1.7,0,0),vec(1,0,0)))
P2M2:p2mPushModel("models/exoticpack/a200.mdl", vec(-7,-0.27+(0.54*B2),4.32-3.06),ang(0,90+(180*B2),0),vec(0.68,0.92,0.92)*0.98,0,array(vec(1.7,0,0),vec(1,0,0)))
P2M2:p2mPushModel("models/exoticpack/a200.mdl", vec(7,-0.27+(0.54*B3),4.32-2.96),ang(0,90+(180*B3),0),vec(0.55,0.89,0.89)*0.98,0,array(vec(1.7,0,0),vec(1,0,0)))
P2M2:p2mPushModel("models/exoticpack/a200.mdl", vec(3.9,-0.37+(0.74*B4),9-2.81),ang(0,90+(180*B4),0),vec(0.42,0.85,0.85)*0.98,0,array(vec(1.7,0,0),vec(1,0,0)))
P2M2:p2mPushModel("models/exoticpack/a200.mdl", vec(-3.9,-0.37+(0.74*B5),9-2.7175),ang(0,90+(180*B5),0),vec(0.33,0.82,0.82)*0.98,0,array(vec(1.7,0,0),vec(1,0,0)))
P2M2:p2mBuild()
#diaphragms?
P2M3=p2mCreate(holoEntity(8):pos(), holoEntity(8):angles())
P2M3:p2mSetParent(holoEntity(8))
P2M3:p2mSetMaterial("models/proppertextures/toolsblack")
P2M3:p2mSetColor(vec(255))
P2M3:p2mPushModel("models/sprops/cylinders/size_1/cylinder_1_5x3.mdl", vec(0,2-(4*B1),5.02),ang(0,180*B1,90),vec(1.8,1.8,0.25))
P2M3:p2mPushModel("models/sprops/cylinders/size_1/cylinder_1_5x3.mdl", vec(-7,2-(4*B2),4.34),ang(0,180*B2,90),vec(1.72,1.72,0.25))
P2M3:p2mPushModel("models/sprops/cylinders/size_1/cylinder_1_5x3.mdl", vec(7,2-(4*B3),4.34),ang(0,180*B3,90),vec(1.72,1.72,0.25))
P2M3:p2mPushModel("models/sprops/cylinders/size_1/cylinder_1_5x3.mdl", vec(3.9,2-(4*B4),9.02),ang(0,180*B4,90),vec(1.65,1.65,0.25))
P2M3:p2mPushModel("models/sprops/cylinders/size_1/cylinder_1_5x3.mdl", vec(-3.9,2-(4*B5),9.02),ang(0,180*B5,90),vec(1.65,1.65,0.25))
P2M3:p2mBuild()

}elseif(Type==3){
    Horn="models/gsgtrainprops/parts/horns/leslie_rs3l.mdl"
A++
holoCreate(A)
holoParent(A,entity())
holoModel(A, Horn)
holoBodygroup(A,1,B1)
holoEntity(A):setSubMaterial(1,S1)
holoEntity(A):setSubMaterial(2,S2)
holoColor(A,Color)
holoScale(A, vec(1.3))
holoAng(A,entity():toWorld(ang(0,Ang+90,0)))
holoPos(A,holoEntity(8):toWorld(vec(0,0*F,2.65 )))
}elseif(Type==4){
    Horn="models/gsgtrainprops/parts/horns/leslie_rs5t.mdl"
A++
holoCreate(A)
holoParent(A,entity())
holoModel(A, Horn)
holoBodygroup(A,1,B1)
holoEntity(A):setSubMaterial(1,S1)
holoEntity(A):setSubMaterial(2,S2)
holoColor(A,Color)
holoScale(A, vec(1.3))
holoAng(A,entity():toWorld(ang(0,Ang+90,0)))
holoPos(A,holoEntity(8):toWorld(vec(0,0*F,2.65 )))
}

}

holoCreate(7)
holoParent(7,entity())
holoAlpha(7,0)
holoPos(7,entity():toWorld(HornPos))

holoCreate(9)
holoParent(9,entity())
holoAlpha(9,0)
holoPos(9,entity():toWorld(HornPos))

if(R & ~R){
    soundStop(1)
    soundStop(3)
    holoEntity(7):soundPlay(0,0,SoundOn)
    holoEntity(9):soundPlay(2,0,SoundOn)
    soundLevel(0,Level-(Level/5))
    soundLevel(2,Level+(Level/5))
    soundDSP(0,0)
    soundDSP(2,16)
    soundVolume(0,Volume)
    soundVolume(2,Volume)
}elseif(!R & ~R){
    soundStop(0)
    soundStop(2)
    holoEntity(7):soundPlay(1,1,SoundOff)
    holoEntity(9):soundPlay(3,1,SoundOff)
    soundLevel(1,Level-(Level/5))
    soundLevel(3,Level+(Level/5))
    soundDSP(1,0)
    soundDSP(3,16)
    soundVolume(1,Volume)
    soundVolume(3,Volume)
}
for(N=0,3){
    soundPitch(N,->PitchIn ? PitchIn : Pitch)
}



