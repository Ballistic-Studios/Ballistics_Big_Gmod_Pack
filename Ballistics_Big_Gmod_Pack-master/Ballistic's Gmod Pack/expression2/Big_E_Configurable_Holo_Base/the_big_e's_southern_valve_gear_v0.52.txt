@name The Big E's Southern Valve Gear V0.52
@inputs Values:array WheelRotation Reverser 
@outputs 
@persist EccMul Values:array SliderLeft SliderRight ValveStemLeft ValveStemRight WheelRotation Base:entity PRWidth PR:entity PL:entity  RodMat:string Scale
@persist P EM EA EO:vector CO:vector CAO CAM CL UO:vector UL ERL CrankDist PistonForward Radius RightRev:entity LeftRev:entity BellCrankLeft BellCrankRight
@trigger 
#Valve Gear is a lot more complex than the main set of rods, so they will require a lot more manual editing than the base e2. 
#However, it will still be able to be somewhat automated.



if(first()|dupefinished()|duped()){

###### IGNORE THESE IGNORE THESE IGNORE THESE #################################################################################################################################################################################################################################
PRWidth=Values[1,number]        #IGNORE THIS
PWidth=Values[2,number]         #IGNORE THIS
RodMat=Values[3,string]         #IGNORE THIS
Wheel=Values[4,entity]          #IGNORE THIS
PistonHeight=Values[5,number]   #IGNORE THIS
PistonForward=Values[6,number]  #IGNORE THIS
PistonAngle=Values[7,number]    #IGNORE THIS
Scale=Values[8,number]          #IGNORE THIS
Radius=Values[9,number]         #IGNORE THIS
Base=Values[10,entity]          #IGNORE THIS
PR=Values[11,entity]            #IGNORE THIS
PL=Values[12,entity]            #IGNORE THIS
##########################################################################################################################
CrankDist=6


##########################################################################################################################################################
CkScl=sqrt((Radius^2)+(CrankDist^2))/18
CkAng=atan((CrankDist/Radius))

#Crank Left Parent

A=1
B=Wheel
holoCreate(A)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,0,0)) )
holoPos(A,B:toWorld(vec(CrankDist*Scale,(PRWidth+4)*Scale,0*Scale)))
holoScale(A, vec(0*Scale))
holoColor(A,vec(255))   
#Crank Right Parent
A=2
B=Wheel
holoCreate(A)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,0,0)) )
holoPos(A,B:toWorld(vec(0*Scale,(-PRWidth-4)*Scale,-CrankDist*Scale)))
holoScale(A, vec(0*Scale))
holoColor(A,vec(255))

#LEFT
#Fixed Link
A=3
B=Base
holoCreate(A)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,0,0)) )
holoPos(A,B:toWorld(vec(37*Scale,(PRWidth+4)*Scale,0*Scale)))
holoScale(A, vec(0*Scale))
holoColor(A,vec(255))
#Radius Hanger
A=4
B=holoEntity(3)
holoCreate(A)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,0,0)) )
holoPos(A,B:toWorld(vec(0*Scale,0*Scale,30*Scale)))
holoScale(A, vec(0*Scale))
holoColor(A,vec(255))
#Eccentric Rod
A=5
B=holoEntity(4)
holoCreate(A)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,0,0)) )
holoPos(A,B:toWorld(vec(0*Scale,0*Scale,-30*Scale)))
holoScale(A, vec(0*Scale))
holoColor(A,vec(255))
#Transmission yoke attachment point
A=6
B=holoEntity(5)
holoCreate(A)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,0,0)) )
holoPos(A,B:toWorld(vec(-6*Scale,0*Scale,0*Scale)))
holoScale(A, vec(0*Scale))
holoColor(A,vec(255))
#Bell Crank
A=7
B=Base
holoCreate(A)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,0,0)) )
holoPos(A,B:toWorld(vec(51*Scale,(PRWidth+4)*Scale,30*Scale)))
holoScale(A, vec(0*Scale))
holoColor(A,vec(255))
A=8
B=holoEntity(7)
holoCreate(A)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,0,0)) )
holoPos(A,B:toWorld(vec(-8*Scale,0*Scale,0*Scale)))
holoScale(A, vec(0*Scale))
holoColor(A,vec(255))
A=9
B=holoEntity(7)
holoCreate(A)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,0,0)) )
holoPos(A,B:toWorld(vec(0*Scale,0*Scale,-15*Scale)))
holoScale(A, vec(0*Scale))
holoColor(A,vec(255))
#Valve Stem Left
A=10
B=Base
holoCreate(A)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,0,0)) )
holoPos(A,B:toWorld(vec(108*Scale,(PRWidth+4)*Scale,15*Scale)))
holoScale(A, vec(0*Scale))
holoColor(A,vec(255))
#RIGHT
#Fixed Link
A=11
B=Base
holoCreate(A)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,0,0)) )
holoPos(A,B:toWorld(vec(37*Scale,(-PRWidth-4)*Scale,0*Scale)))
holoScale(A, vec(0*Scale))
holoColor(A,vec(255))
#Radius Hanger
A=12
B=holoEntity(11)
holoCreate(A)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,0,0)) )
holoPos(A,B:toWorld(vec(0*Scale,0*Scale,30*Scale)))
holoScale(A, vec(0*Scale))
holoColor(A,vec(255))
#Eccentric Rod
A=13
B=holoEntity(12)
holoCreate(A)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,0,0)) )
holoPos(A,B:toWorld(vec(0*Scale,0*Scale,-30*Scale)))
holoScale(A, vec(0*Scale))
holoColor(A,vec(255))
#Transmission yoke attachment point
A=14
B=holoEntity(13)
holoCreate(A)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,0,0)) )
holoPos(A,B:toWorld(vec(-6*Scale,0*Scale,0*Scale)))
holoScale(A, vec(0*Scale))
holoColor(A,vec(255))
#Bell Crank
A=15
B=Base
holoCreate(A)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,0,0)) )
holoPos(A,B:toWorld(vec(51*Scale,(-PRWidth-4)*Scale,30*Scale)))
holoScale(A, vec(0*Scale))
holoColor(A,vec(255))
A=16
B=holoEntity(15)
holoCreate(A)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,0,0)) )
holoPos(A,B:toWorld(vec(-8*Scale,0*Scale,0*Scale)))
holoScale(A, vec(0*Scale))
holoColor(A,vec(255))
A=17
B=holoEntity(15)
holoCreate(A)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,0,0)) )
holoPos(A,B:toWorld(vec(0*Scale,0*Scale,-15*Scale)))
holoScale(A, vec(0*Scale))
holoColor(A,vec(255))
#Valve Stem Left
A=18
B=Base
holoCreate(A)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,0,0)) )
holoPos(A,B:toWorld(vec(108*Scale,(-PRWidth-4)*Scale,15*Scale)))
holoScale(A, vec(0*Scale))
holoColor(A,vec(255))


#Detail##############################
#Cranks
#left

A++
B=Wheel
holoCreate(A)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,90,CkAng)) )
holoModel(A, "models/anytrains/rods/eccentriccrank2.mdl")
holoEntity(A):setSubMaterial(1,RodMat)
holoEntity(A):setSubMaterial(5,"models/proppertextures/brass")
holoPos(A,B:toWorld(vec(0,(PRWidth+4),-Radius)))
holoScale(A, vec(CkScl))
holoColor(A,vec(255))

A++
B=Wheel
holoCreate(A)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,0,90)) )
holoModel(A, "models/sprops/cylinders/size_3/cylinder_6x12.mdl")
holoEntity(A):setSubMaterial(1,RodMat)
holoPos(A,B:toWorld(vec(0,(PRWidth-0.5),-Radius)))
holoScale(A, vec(0.8,0.8,0.8))
holoColor(A,vec(255))

#right

A++
B=Wheel
holoCreate(A)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,-90,-90-CkAng)) )
holoModel(A, "models/anytrains/rods/eccentriccrank2.mdl")
holoEntity(A):setSubMaterial(1,RodMat)
holoEntity(A):setSubMaterial(5,"models/proppertextures/brass")
holoPos(A,B:toWorld(vec(-Radius,(-PRWidth-4),0)))
holoScale(A, vec(CkScl))
holoColor(A,vec(255))

A++
B=Wheel
holoCreate(A)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,0,90)) )
holoModel(A, "models/sprops/cylinders/size_3/cylinder_6x12.mdl")
holoEntity(A):setSubMaterial(1,RodMat)
holoPos(A,B:toWorld(vec(-Radius,(-PRWidth+0.5),0)))
holoScale(A, vec(0.8,0.8,0.8))
holoColor(A,vec(255))

#Fixed Link
#Left
A++
B=holoEntity(3)
holoCreate(A)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,0,0)) )
holoModel(A, "models/sprops/rectangles/size_1/rect_3x3x3.mdl")
holoEntity(A):setSubMaterial(1,"models/proppertextures/brass")
holoPos(A,B:toWorld(vec(0,2.5,30)))
holoScale(A, vec(1.2,0.5,1.1))
holoColor(A,vec(255))

#Right
A++
B=holoEntity(11)
holoCreate(A)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,0,0)) )
holoModel(A, "models/sprops/rectangles/size_1/rect_3x3x3.mdl")
holoEntity(A):setSubMaterial(1,"models/proppertextures/brass")
holoPos(A,B:toWorld(vec(0,-2.5,30)))
holoScale(A, vec(1.2,0.5,1.1))
holoColor(A,vec(255))

#Radius Hanger
#Left
local RHLP2M = p2mCreate(1,holoEntity(4):pos(), holoEntity(4):angles())

RHLP2M:p2mPushModel(1,"models/sprops/cylinders/size_2/cylinder_3x6.mdl",vec(0,2.5,0)*Scale,ang(0,0,90),vec(0.75,0.75,0.9)*Scale)
RHLP2M:p2mPushModel(1,"models/sprops/rectangles_thin/size_0/rect_1_5x6x1_5.mdl",vec(0,4.35,-4.5)*Scale,ang(90,0,0),vec(9/6,0.82,1)*Scale)
RHLP2M:p2mPushModel(1,"models/sprops/rectangles_thin/size_0/rect_1_5x6x1_5.mdl",vec(0,0.65,-4.5)*Scale,ang(90,0,0),vec(9/6,0.82,1)*Scale)
RHLP2M:p2mPushModel(1,"models/sprops/geometry/hring_12.mdl",vec(0,2.5,-10.25)*Scale,ang(180,90,0),vec(0.41,0.5,0.42)*Scale)
RHLP2M:p2mPushModel(1,"models/sprops/rectangles_thin/size_0/rect_1_5x18x1_5.mdl",vec(0,2.5,-18.75)*Scale,ang(90,0,0),vec(16/18,1,1)*Scale)
RHLP2M:p2mPushModel(1,"models/sprops/geometry/hring_12.mdl",vec(0,2.5,-27.75)*Scale,ang(0,90,0),vec(0.41,0.5,0.42)*Scale)
RHLP2M:p2mPushModel(1,"models/sprops/cylinders/size_2/cylinder_3x3.mdl",vec(0,4.35,-30)*Scale,ang(0,0,90),vec(1,1,0.6)*Scale)
RHLP2M:p2mPushModel(1,"models/sprops/cylinders/size_2/cylinder_3x3.mdl",vec(0,0.65,-30)*Scale,ang(0,0,90),vec(1,1,0.6)*Scale)



RHLP2M:p2mBuild()
RHLP2M:parentTo(holoEntity(4))
RHLP2M:p2mSetMaterial(1,RodMat)
RHLP2M:setColor(vec(255,255,255))




#Right
local RHRP2M = p2mCreate(1,holoEntity(12):pos(), holoEntity(12):angles())

RHRP2M:p2mPushModel(1,"models/sprops/cylinders/size_2/cylinder_3x6.mdl",vec(0,-2.5,0)*Scale,ang(0,0,90),vec(0.75,0.75,0.9)*Scale)
RHRP2M:p2mPushModel(1,"models/sprops/rectangles_thin/size_0/rect_1_5x6x1_5.mdl",vec(0,-4.35,-4.5)*Scale,ang(90,0,0),vec(9/6,0.82,1)*Scale)
RHRP2M:p2mPushModel(1,"models/sprops/rectangles_thin/size_0/rect_1_5x6x1_5.mdl",vec(0,-0.65,-4.5)*Scale,ang(90,0,0),vec(9/6,0.82,1)*Scale)
RHRP2M:p2mPushModel(1,"models/sprops/geometry/hring_12.mdl",vec(0,-2.5,-10.25)*Scale,ang(180,90,0),vec(0.41,0.5,0.42)*Scale)
RHRP2M:p2mPushModel(1,"models/sprops/rectangles_thin/size_0/rect_1_5x18x1_5.mdl",vec(0,-2.5,-18.75)*Scale,ang(90,0,0),vec(16/18,1,1)*Scale)
RHRP2M:p2mPushModel(1,"models/sprops/geometry/hring_12.mdl",vec(0,-2.5,-27.75)*Scale,ang(0,90,0),vec(0.41,0.5,0.42)*Scale)
RHRP2M:p2mPushModel(1,"models/sprops/cylinders/size_2/cylinder_3x3.mdl",vec(0,-4.35,-30)*Scale,ang(0,0,90),vec(1,1,0.6)*Scale)
RHRP2M:p2mPushModel(1,"models/sprops/cylinders/size_2/cylinder_3x3.mdl",vec(0,-0.65,-30)*Scale,ang(0,0,90),vec(1,1,0.6)*Scale)

RHRP2M:p2mBuild()
RHRP2M:parentTo(holoEntity(12))
RHRP2M:p2mSetMaterial(1,RodMat)
RHRP2M:setColor(vec(255,255,255))


#Eccentric Rod
#Left

local ERLP2M = p2mCreate(1,holoEntity(5):pos(), holoEntity(4):angles())

ERLP2M:p2mPushModel(1,"models/sprops/cylinders/size_2/cylinder_3x6.mdl",vec(0,-2.5,0)*Scale,ang(0,0,90),vec(0.65,0.65,1.1)*Scale)
ERLP2M:p2mPushModel(1,"models/sprops/rectangles_thin/size_0/rect_1_5x42x1_5.mdl",vec(15.5,-2.5,0)*Scale,ang(0,0,0),vec(43/42,1,1)*Scale)
ERLP2M:p2mPushModel(1,"models/sprops/cylinders/size_2/cylinder_3x3.mdl",vec(-6,-2.5,0)*Scale,ang(0,0,90),vec(0.9,0.9,0.9)*Scale)
ERLP2M:p2mPushModel(1,"models/sprops/cylinders/size_2/cylinder_3x3.mdl",vec(-6,-2.5,0)*Scale,ang(0,0,90),vec(0.65,0.65,1.1)*Scale)


ERLP2M:p2mBuild()
ERLP2M:parentTo(holoEntity(5))
ERLP2M:p2mSetMaterial(1,RodMat)
ERLP2M:setColor(vec(255,255,255))







A++
B=holoEntity(1)
holoCreate(A)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,0,90)) )
holoModel(A, "models/sprops/cylinders/size_2/cylinder_3x3.mdl")
holoEntity(A):setSubMaterial(1,RodMat)
holoPos(A,B:toWorld(vec(0,-2.25,0)))
holoScale(A, vec(0.8,0.8,0.9))
holoColor(A,vec(255))

#Right
local ERRP2M = p2mCreate(1,holoEntity(13):pos(), holoEntity(13):angles())

ERRP2M:p2mPushModel(1,"models/sprops/cylinders/size_2/cylinder_3x6.mdl",vec(0,2.5,0)*Scale,ang(0,0,90),vec(0.65,0.65,1.1)*Scale)
ERRP2M:p2mPushModel(1,"models/sprops/rectangles_thin/size_0/rect_1_5x42x1_5.mdl",vec(15.5,2.5,0)*Scale,ang(0,0,0),vec(43/42,1,1)*Scale)
ERRP2M:p2mPushModel(1,"models/sprops/cylinders/size_2/cylinder_3x3.mdl",vec(-6,2.5,0)*Scale,ang(0,0,90),vec(0.9,0.9,0.9)*Scale)
ERRP2M:p2mPushModel(1,"models/sprops/cylinders/size_2/cylinder_3x3.mdl",vec(-6,2.5,0)*Scale,ang(0,0,90),vec(0.65,0.65,1.1)*Scale)


ERRP2M:p2mBuild()
ERRP2M:parentTo(holoEntity(13))
ERRP2M:p2mSetMaterial(1,RodMat)
ERRP2M:setColor(vec(255,255,255))
A++
B=holoEntity(2)
holoCreate(A)
holoParent(A, B)
holoAng(A, B:toWorld(ang(0,0,90)) )
holoModel(A, "models/sprops/cylinders/size_2/cylinder_3x3.mdl")
holoEntity(A):setSubMaterial(1,RodMat)
holoPos(A,B:toWorld(vec(0,2.25,0)))
holoScale(A, vec(0.8,0.8,0.9))
holoColor(A,vec(255))


#Bell Crank
#left


local BCLP2M = p2mCreate(1,holoEntity(7):pos(), holoEntity(7):angles())

BCLP2M:p2mPushModel(1,"models/sprops/cylinders/size_2/cylinder_3x12.mdl",vec(0,2.5,0)*Scale,ang(0,0,90),vec(0.75,0.75,0.8)*Scale)
BCLP2M:p2mPushModel(1,"models/sprops/cylinders/size_2/cylinder_3x3.mdl",vec(-8,-1.5,0)*Scale,ang(0,0,90),vec(0.75,0.75,0.75)*Scale)
BCLP2M:p2mPushModel(1,"models/sprops/cylinders/size_2/cylinder_3x3.mdl",vec(-8,6.5,0)*Scale,ang(0,0,90),vec(0.75,0.75,0.75)*Scale)
BCLP2M:p2mPushModel(1,"models/sprops/rectangles_thin/size_0/rect_1_5x6x1_5.mdl",vec(-4,6.5,0)*Scale,ang(0,0,0),vec(8/6,1,1)*Scale)
BCLP2M:p2mPushModel(1,"models/sprops/rectangles_thin/size_0/rect_1_5x6x1_5.mdl",vec(-4,-1.5,0)*Scale,ang(0,0,0),vec(8/6,1,1)*Scale)
BCLP2M:p2mPushModel(1,"models/sprops/cylinders/size_2/cylinder_3x6.mdl",vec(0,2.5,-15)*Scale,ang(0,0,90),vec(0.75,0.75,1)*Scale)
BCLP2M:p2mPushModel(1,"models/sprops/rectangles_thin/size_0/rect_1_5x18x1_5.mdl",vec(0,4.5,-7.5)*Scale,ang(90,0,0),vec(15/18,1,1)*Scale)
BCLP2M:p2mPushModel(1,"models/sprops/rectangles_thin/size_0/rect_1_5x18x1_5.mdl",vec(0,0.5,-7.5)*Scale,ang(90,0,0),vec(15/18,1,1)*Scale)

BCLP2M:p2mBuild()
BCLP2M:parentTo(holoEntity(7))
BCLP2M:p2mSetMaterial(1,RodMat)
BCLP2M:setColor(vec(255,255,255))











#right
local BCRP2M = p2mCreate(1,holoEntity(15):pos(), holoEntity(15):angles())

BCRP2M:p2mPushModel(1,"models/sprops/cylinders/size_2/cylinder_3x12.mdl",vec(0,-2.5,0)*Scale,ang(0,0,90),vec(0.75,0.75,0.8)*Scale)
BCRP2M:p2mPushModel(1,"models/sprops/cylinders/size_2/cylinder_3x3.mdl",vec(-8,1.5,0)*Scale,ang(0,0,90),vec(0.75,0.75,0.75)*Scale)
BCRP2M:p2mPushModel(1,"models/sprops/cylinders/size_2/cylinder_3x3.mdl",vec(-8,-6.5,0)*Scale,ang(0,0,90),vec(0.75,0.75,0.75)*Scale)
BCRP2M:p2mPushModel(1,"models/sprops/rectangles_thin/size_0/rect_1_5x6x1_5.mdl",vec(-4,-6.5,0)*Scale,ang(0,0,0),vec(8/6,1,1)*Scale)
BCRP2M:p2mPushModel(1,"models/sprops/rectangles_thin/size_0/rect_1_5x6x1_5.mdl",vec(-4,1.5,0)*Scale,ang(0,0,0),vec(8/6,1,1)*Scale)
BCRP2M:p2mPushModel(1,"models/sprops/cylinders/size_2/cylinder_3x6.mdl",vec(0,-2.5,-15)*Scale,ang(0,0,90),vec(0.75,0.75,1)*Scale)
BCRP2M:p2mPushModel(1,"models/sprops/rectangles_thin/size_0/rect_1_5x18x1_5.mdl",vec(0,-4.5,-7.5)*Scale,ang(90,0,0),vec(15/18,1,1)*Scale)
BCRP2M:p2mPushModel(1,"models/sprops/rectangles_thin/size_0/rect_1_5x18x1_5.mdl",vec(0,-0.5,-7.5)*Scale,ang(90,0,0),vec(15/18,1,1)*Scale)

BCRP2M:p2mBuild()
BCRP2M:parentTo(holoEntity(15))
BCRP2M:p2mSetMaterial(1,RodMat)
BCRP2M:setColor(vec(255,255,255))


#Transmission Yoke

#left

local TYLP2M = p2mCreate(1,holoEntity(8):pos(), holoEntity(8):angles())

TYLP2M:p2mPushModel(1,"models/sprops/rectangles_thin/size_0/rect_1_5x18x1_5.mdl",vec(0,6.5,-10)*Scale,ang(90,0,0),vec(20/18,1,1)*Scale)
TYLP2M:p2mPushModel(1,"models/sprops/rectangles_thin/size_0/rect_1_5x18x1_5.mdl",vec(0,-1.5,-10)*Scale,ang(90,0,0),vec(20/18,1,1)*Scale)
TYLP2M:p2mPushModel(1,"models/sprops/cylinders/size_1/cylinder_1_5x3.mdl",vec(0,6.65,0)*Scale,ang(0,0,90),vec(1,1,0.9)*Scale)
TYLP2M:p2mPushModel(1,"models/sprops/cylinders/size_1/cylinder_1_5x3.mdl",vec(0,-1.65,0)*Scale,ang(0,0,90),vec(1,1,0.9)*Scale)
TYLP2M:p2mPushModel(1,"models/sprops/rectangles_thin/size_0/rect_1_5x6x1_5.mdl",vec(0,4.755,-21.8)*Scale,ang(-50,90,0),vec(1,1,1)*Scale)
TYLP2M:p2mPushModel(1,"models/sprops/rectangles_thin/size_0/rect_1_5x6x1_5.mdl",vec(0,0.245,-21.8)*Scale,ang(50,90,0),vec(1,1,1)*Scale)
TYLP2M:p2mPushModel(1,"models/sprops/rectangles_thin/size_0/rect_1_5x6x1_5.mdl",vec(0,2.5,-26.5)*Scale,ang(90,0,0),vec(1.1,1.3,1)*Scale)



TYLP2M:p2mBuild()
TYLP2M:parentTo(holoEntity(8))
TYLP2M:p2mSetMaterial(1,RodMat)
TYLP2M:setColor(vec(255,255,255))










#right
local TYRP2M = p2mCreate(1,holoEntity(16):pos(), holoEntity(16):angles())

TYRP2M:p2mPushModel(1,"models/sprops/rectangles_thin/size_0/rect_1_5x18x1_5.mdl",vec(0,-6.5,-10)*Scale,ang(90,0,0),vec(20/18,1,1)*Scale)
TYRP2M:p2mPushModel(1,"models/sprops/rectangles_thin/size_0/rect_1_5x18x1_5.mdl",vec(0,1.5,-10)*Scale,ang(90,0,0),vec(20/18,1,1)*Scale)
TYRP2M:p2mPushModel(1,"models/sprops/cylinders/size_1/cylinder_1_5x3.mdl",vec(0,-6.65,0)*Scale,ang(0,0,90),vec(1,1,0.9)*Scale)
TYRP2M:p2mPushModel(1,"models/sprops/cylinders/size_1/cylinder_1_5x3.mdl",vec(0,1.65,0)*Scale,ang(0,0,90),vec(1,1,0.9)*Scale)
TYRP2M:p2mPushModel(1,"models/sprops/rectangles_thin/size_0/rect_1_5x6x1_5.mdl",vec(0,-4.755,-21.8)*Scale,ang(50,90,0),vec(1,1,1)*Scale)
TYRP2M:p2mPushModel(1,"models/sprops/rectangles_thin/size_0/rect_1_5x6x1_5.mdl",vec(0,-0.245,-21.8)*Scale,ang(-50,90,0),vec(1,1,1)*Scale)
TYRP2M:p2mPushModel(1,"models/sprops/rectangles_thin/size_0/rect_1_5x6x1_5.mdl",vec(0,-2.5,-26.5)*Scale,ang(90,0,0),vec(1.1,1.3,1)*Scale)



TYRP2M:p2mBuild()
TYRP2M:parentTo(holoEntity(16))
TYRP2M:p2mSetMaterial(1,RodMat)
TYRP2M:setColor(vec(255,255,255))

#Valve Rod

#Left
local VRLP2M = p2mCreate(1,holoEntity(9):pos(), holoEntity(9):angles())

VRLP2M:p2mPushModel(1,"models/sprops/rectangles_thin/size_0/rect_1_5x54x1_5.mdl",vec(-28.5,-2.5,0)*Scale,ang(0,0,0),vec(57/54,0.8,1)*Scale)
VRLP2M:p2mPushModel(1,"models/sprops/cylinders/size_2/cylinder_3x3.mdl",vec(0,-2.5,0)*Scale,ang(0,0,90),vec(1,1,0.7)*Scale)

VRLP2M:p2mBuild()
VRLP2M:parentTo(holoEntity(9))
VRLP2M:p2mSetMaterial(1,RodMat)
VRLP2M:setColor(vec(255,255,255))






#Right
local VRRP2M = p2mCreate(1,holoEntity(17):pos(), holoEntity(17):angles())

VRRP2M:p2mPushModel(1,"models/sprops/rectangles_thin/size_0/rect_1_5x54x1_5.mdl",vec(-28.5,2.5,0)*Scale,ang(0,0,0),vec(57/54,0.8,1)*Scale)
VRRP2M:p2mPushModel(1,"models/sprops/cylinders/size_2/cylinder_3x3.mdl",vec(0,2.5,0)*Scale,ang(0,0,90),vec(1,1,0.7)*Scale)

VRRP2M:p2mBuild()
VRRP2M:parentTo(holoEntity(17))
VRRP2M:p2mSetMaterial(1,RodMat)
VRRP2M:setColor(vec(255,255,255))

#Valve Stem

#Left
local VSLP2M = p2mCreate(1,holoEntity(10):pos(), holoEntity(10):angles())

VSLP2M:p2mPushModel(1,"models/sprops/cylinders/size_1/cylinder_1_5x18.mdl",vec(9,2.5,0)*Scale,ang(90,0,0),vec(1,1,1)*Scale)
VSLP2M:p2mPushModel(1,"models/sprops/rectangles/size_1_5/rect_6x6x3.mdl",vec(4.5,2.5,0)*Scale,ang(0,0,0),vec(9/6,0.6,0.75)*Scale)
VSLP2M:p2mPushModel(1,"models/sprops/cylinders/size_2/cylinder_3x6.mdl",vec(0,2.5,0)*Scale,ang(0,0,90),vec(0.75,0.75,0.6)*Scale)

VSLP2M:p2mBuild()
VSLP2M:parentTo(holoEntity(10))
VSLP2M:p2mSetMaterial(1,RodMat)
VSLP2M:setColor(vec(255,255,255))



#Right
local VSRP2M = p2mCreate(1,holoEntity(18):pos(), holoEntity(18):angles())

VSRP2M:p2mPushModel(1,"models/sprops/cylinders/size_1/cylinder_1_5x18.mdl",vec(9,-2.5,0)*Scale,ang(90,0,0),vec(1,1,1)*Scale)
VSRP2M:p2mPushModel(1,"models/sprops/rectangles/size_1_5/rect_6x6x3.mdl",vec(4.5,-2.5,0)*Scale,ang(0,0,0),vec(9/6,0.6,0.75)*Scale)
VSRP2M:p2mPushModel(1,"models/sprops/cylinders/size_2/cylinder_3x6.mdl",vec(0,-2.5,0)*Scale,ang(0,0,90),vec(0.75,0.75,0.6)*Scale)

VSRP2M:p2mBuild()
VSRP2M:parentTo(holoEntity(18))
VSRP2M:p2mSetMaterial(1,RodMat)
VSRP2M:setColor(vec(255,255,255))



}
RadiusHangerLeft=-(cos(WheelRotation)*12*CrankDist/6)
TransmissionYokeLeft=-(cos(WheelRotation)*12*CrankDist/6)+((cos(WheelRotation)*(Reverser-abs(Reverser))*0.375*CrankDist/6)^2)
BellCrankLeft=(sin(WheelRotation)*6*CrankDist/5)-(cos(WheelRotation)*12*CrankDist/6*Reverser)

RadiusHangerRight=(sin(WheelRotation)*12*CrankDist/6)
TransmissionYokeRight=(sin(WheelRotation)*12*CrankDist/6)+((sin(WheelRotation)*(Reverser-abs(Reverser))*0.375*CrankDist/6)^2)
BellCrankRight=(cos(WheelRotation)*6*CrankDist/5)+(sin(WheelRotation)*12*CrankDist/6*Reverser)



holoAng(3, Base:toWorld(ang(Reverser*11.5,0,0)) )
holoAng(4, holoEntity(3):toWorld(ang(RadiusHangerLeft,0,0)) )
holoAng(7, Base:toWorld(ang(BellCrankLeft,0,0)) )
holoAng(8, Base:toWorld(ang(TransmissionYokeLeft,0,0)) )
holoPos(10,Base:toWorld(vec((108-(BellCrankLeft/3.9))*Scale,(PRWidth+4)*Scale,15*Scale)))

holoAng(11, Base:toWorld(ang(Reverser*11.5,0,0)) )
holoAng(12, holoEntity(11):toWorld(ang(RadiusHangerRight,0,0)) )
holoAng(15, Base:toWorld(ang(BellCrankRight,0,0)) )
holoAng(16, Base:toWorld(ang(TransmissionYokeRight,0,0)) )
holoPos(18,Base:toWorld(vec((108-(BellCrankRight/3.9))*Scale,(-PRWidth-4)*Scale,15*Scale)))



local EccentricRodAngLeft=(holoEntity(1):pos()-holoEntity(5):pos()):toAngle()
holoAng(5,EccentricRodAngLeft)
holoAng(1,EccentricRodAngLeft)

local EccentricRodAngRight=(holoEntity(2):pos()-holoEntity(13):pos()):toAngle()
holoAng(13,EccentricRodAngRight)
holoAng(2,EccentricRodAngRight)

local ValveRodLeft=(holoEntity(9):pos()-holoEntity(10):pos()):toAngle()
holoAng(9,ValveRodLeft)

local ValveRodRight=(holoEntity(17):pos()-holoEntity(18):pos()):toAngle()
holoAng(17,ValveRodRight)
